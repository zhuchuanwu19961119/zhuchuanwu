<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2018/4/28 0028
 * Time: 9:06
 */
namespace app\BlogAdmin\controller;
use \think\Controller as Con;
use \think\Db;
use think\Session;
use \think\View;
use \think\Request;
use think\helper\hash\Md5;
use \app\blogadmin\controller\Base as Base;
use \app\blogadmin\model\user as UserModel;
session_start();
class Member extends Base{

    /*调用Base*/
    public function _initialize()
    {
        parent::check(); // TODO: Change the autogenerated stub
    }

    /*会员页面显示*/
    public function showList(){
        $this->ShowUser();
        return $this->fetch('list');
    }
    /*搜索查询*/
    public function searchUser(){
        $Request=Request::instance();
        if($Request->has('SearchBtn')) {
            $Type = $Request->post('Type');  //标题
            $State = $Request->post('State');  //状态
            $Text = $Request->post('Text');  //内容
            if ($State === "按状态") {
                if ($Type === "按id") {
                    /*选择标题搜索*/
                    if (preg_match("/^\d*$/",$Text) && ($Text!='' || $Text!=null && $Text!="")) {
                        $this->searchID($Text);
                        return $this->fetch('list');
                    }else if($Text=='' || $Text==null && $Text=="")
                    { return $this->fetch('list');
                    }else  return '<script> alert("id格式输入错误!");window.location.href="../Member/ShowList" </script>';
                } else if ($Type === "按name") {
                    /*选择发布人搜索*/
                    $this->searchName($Text);
                    return $this->fetch('list');
                }
            } else {
                if ($State === "启用") {
                    $this->searchState($State);
                } else if ($State === "禁用") {
                    $this->searchState($State);
                }
                return $this->fetch('list');
            }
        }
    }
    /*按照id搜索会员*/
    public function searchID($Text){
        $UserModel = new UserModel();
        $Date = $UserModel->where("user_id = $Text")->select();
        $this->assign([
            'UserDate' => $Date,
            'page' => '',
        ]);
    }
    /*按照name搜索会员*/
    public function searchName($Text){
        $UserModel = new UserModel();
        $Date = $UserModel->where("user_name like '%$Text%'")->select();
        $this->assign([
            'UserDate' => $Date,
            'page' => '',
        ]);
    }
    /*按照状态搜索会员*/
    public  function searchState($state){
        if($state === "启用"){
            $UserModel = new UserModel();
            $page = Request::instance()->get('page');
            $page = isset($page)?($page-1)*5:0;
            $Date = $UserModel->where(['user_state'=>1])->limit($page,4)->select();
            $page = $UserModel->paginate(count($Date)+1);
            $this->assign([
                'UserDate' => $Date,
                'page' =>$page,
            ]);
        }else   if($state=== "禁用"){
            $UserModel = new UserModel();
            $Date = $UserModel->where(['user_state'=>-1])->select();
            $this->assign([
                'UserDate' => $Date,
                'page' => '',
            ]);
        }

    }
    /*修改会员的状态*/
    public function updateState(){
        if(Session::has('admin_id')){
            $Request = Request::instance();
            if($Request->has('id') && $Request->has('state'))
            {
                $id = $Request->get('id');
                $state = $Request->get('state');
                $UserModel = new UserModel();
                $retuen = $UserModel->where(['user_id'=>$id])->update(['user_state'=>0-$state]);
                if($retuen>-1){
                    return '<script> alert("状态修改成功!");history.go(-1); </script>';
//                    echo '<script> alert("状态修改成功!");</script>';
//                    return header('location:../member/ShowList');
                }
            }
        }else return $this->fetch('admin/login');
    }
    /*获取全部user*/
    public function showUser(){
        $UserModel = new UserModel();
        $page = Request::instance()->get('page');
        $page = isset($page)?($page-1)*5:0;
        $Date = $UserModel->limit($page,5)->select();
        $page = $UserModel->paginate(5);
        $this->assign([
            'UserDate' => $Date,
            'page' => $page,
        ]);
    }

    /*会员修改显示*/
    public function showUpdate(){
        if(Session::has('admin_id')) {
            $this->assign([
                'Header'=>"修改用户信息"
            ]);
            /*admin_id*/
            $Request = Request::instance();
            if($Request->has('id')){
                $id=$Request->get('id');
                $UserModel = new UserModel();
                $Date =  $UserModel->where(['user_id'=>$id])->select();
                $this->assign([
                    'Header'=>"修改用户信息",
                    'UserDate'=>$Date
                ]);
            }
            return $this->fetch('update');
        }else return $this->fetch('admin/login');
    }

    /*修改会员信息*/
    public function updateUser(){
        if(Session::has('admin_id')) {
            $Request = Request::instance();
            if($Request->has('user_id')) {
                $user_id = $Request->post('user_id');
                $user_name = $Request->post('user_name');
                $show_name = $Request->post('show_name');
                $user_password = $Request->post('user_password');
                $user_state = $Request->post('state');
                if($user_state=== "启用")
                    $user_state=1;
                else if($user_state=== "禁用")
                    $user_state=-1;
                if(($show_name=='' ||$show_name ==null) || ($user_password=='' ||$user_password ==null)){
                    return '<script> alert("输入项不能为null!");history.go(-1); </script>';
                }else {
                    $UserModel = new UserModel();
                    /*数据*/
                    $Date=array([
                        'user_password'=>md5($user_password),
                        'user_state' => $user_state,
                        'user_show_name'=> $show_name,
                    ]);
                    $user_password=md5($user_password);
                    $retuen = $UserModel->query("update tb_user set  user_show_name='$show_name',user_password='$user_password',user_state =$user_state where user_id =$user_id");
                    if($retuen > -1){
                        return '<script> alert("用户信息修改成功!");history.go(-2); </script>';
                    }
                }
            }
        }else return $this->fetch('admin/login');
    }
    /* 删除会员信息 */
    public function deleteUser(){
        $Request = Request::instance();
        if($Request->has('user_id')) {
            $user_id = $Request->get('user_id');
            $UserModel = new UserModel();
            $retuen = $UserModel->where(['user_id'=>$user_id])->delete();
            if($retuen > -1){
                return '<script> alert("用户信息删除成功!");history.go(-2); </script>';
            }
        }
    }
}