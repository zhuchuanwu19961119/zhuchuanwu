<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2018/4/28 0028
 * Time: 13:40
 */
namespace app\BlogAdmin\controller;
use \think\Controller as Con;
use \think\Db;
use think\Session;
use \think\View;
use \think\Request;
use think\helper\hash\Md5;
use \app\blogadmin\controller\Base as Base;
use \app\blogadmin\model\admin as AdminModel;
use \app\blogadmin\model\authGroup as authGroupModel;
use \app\blogadmin\model\authGroupAccess as authGroupAccessModel;
use \app\blogadmin\model\authRule as authRuleModel;
session_start();
    class Manage extends Base{

    /*调用Base*/
    public function _initialize()
    {
        parent::check(); // TODO: Change the autogenerated stub
    }

    /**
     *  list 显示
     */
    public function showList(){
        $this->AdminDate();
        return $this->fetch('admin/list');
    }
    /*
     *  admin adte
     */
    public function adminDate(){
        $AdminModel = new AdminModel();
        $page = Request::instance()->get('page');
        $page = isset($page)?($page-1)*5:0;
        $Admindate = $AdminModel->limit($page,5)->order('admin_power_id ASC')->select();
//        $Admindate = $AdminModel->query("select * from tb_admin ORDER BY admin_power_id ASC");
        $page = $AdminModel->paginate(5);
        $this->assign([
            'AdminDate'=>$Admindate,
            'ided'=>Session::get('admin_id'),
            'page' => $page,
        ]);
        $Powerdate = Db::query("select distinct tb_auth_group_access.*,tb_auth_group.* from  tb_auth_group,tb_auth_group_access where id=group_id ");
        $this->assign([
            'PowerDate'=>$Powerdate,
        ]);
    }
    /*搜索查询*/
    public function searchAdmin(){
        $Request=Request::instance();
        if($Request->has('SearchBtn')) {
            $Type = $Request->post('Type');  //标题
            $State = $Request->post('State');  //状态
            $Text = $Request->post('Text');  //内容
            if ($State === "按状态") {
                if ($Type === "按id") {
                    /*选择标题搜索*/
                    if (preg_match("/^\d*$/",$Text) && ($Text!='' || $Text!=null && $Text!="")) {
                        $this->searchID($Text);
                        return $this->fetch('admin/list');
                    } else if ($Text == '' || $Text == null) {
                        $this->AdminDate();
                        return $this->fetch('admin/list');
                    } else  return '<script> alert("id格式输入错误!");window.location.href="../Member/ShowList" </script>';
                } else if ($Type === "按name") {
                    /*选择发布人搜索*/
                    $this->searchName($Text);
                    return $this->fetch('admin/list');
                }
            } else {
                if ($State === "启用") {
                    $this->searchState($State);
                } else if ($State === "禁用") {
                    $this->searchState($State);
                }
                return $this->fetch('admin/list');
            }
        }
    }
    /*按照id搜索*/
    public function searchID($Text){
        $AdminModel = new AdminModel();
        $Date = $AdminModel->where("admin_id = $Text")->select();
        $this->assign([
            'AdminDate' => $Date,
            'page' => '',
            'ided'=>Session::get('admin_id'),
        ]);
        $Powerdate = Db::query("select distinct tb_auth_group_access.*,tb_auth_group.* from  tb_auth_group,tb_auth_group_access where id=group_id ");
        $this->assign([
            'PowerDate'=>$Powerdate,
        ]);
    }
    /*按照name搜索*/
    public function searchName($Text){
        $AdminModel = new AdminModel();
        $Date = $AdminModel->where("admin_name like '%$Text%'")->select();
        $this->assign([
            'AdminDate' => $Date,
            'page' => '',
            'ided'=>Session::get('admin_id'),
        ]);
        $Powerdate = Db::query("select distinct tb_auth_group_access.*,tb_auth_group.* from  tb_auth_group,tb_auth_group_access where id=group_id ");
        $this->assign([
            'PowerDate'=>$Powerdate,
        ]);
    }
    /*按照状态搜索*/
    public  function searchState($state){
        if($state=== "启用"){
            $AdminModel = new AdminModel();
            $Date = $AdminModel->where(['admin_state'=>1])->select();
            $this->assign([
                'AdminDate' => $Date,
                'page' => '',
                'ided'=>Session::get('admin_id'),
            ]);
            $Powerdate = Db::query("select distinct tb_auth_group_access.*,tb_auth_group.* from  tb_auth_group,tb_auth_group_access where id=group_id ");
            $this->assign([
                'PowerDate'=>$Powerdate,
            ]);
        }else   if($state=== "禁用"){
            $AdminModel = new AdminModel();
            $Date = $AdminModel->where(['admin_state'=>-1])->select();
            $this->assign([
                'AdminDate' => $Date,
                'page' => '',
            ]);
            $Powerdate = Db::query("select distinct tb_auth_group_access.*,tb_auth_group.* from  tb_auth_group,tb_auth_group_access where id=group_id ");
            $this->assign([
                'PowerDate'=>$Powerdate,
            ]);
        }

    }
    /*修改管理员的状态*/
    public function updateState(){
        if(Session::has('admin_id')){
            $Request = Request::instance();
            if($Request->has('id') && $Request->has('state'))
            {
                $id = $Request->get('id');
                $state = $Request->get('state');
                $AdminModel = new AdminModel();
                $retuen = $AdminModel->where(['admin_id'=>$id])->update(['admin_state'=>0-$state]);
                if($retuen>-1){
                    return '<script> alert("状态修改成功!");history.go(-1); </script>';
//                    echo '<script> alert("状态修改成功!");</script>';
//                    return header('location:../Manage/ShowList');
                }
            }
        }else return $this->fetch('admin/login');
    }
    /*管理员修改显示*/
    public function ShowUpdate(){
        if(Session::has('admin_id')) {
            /*admin_id*/
            $this->assign([
                'Header'=>"修改管理员信息",
            ]);
            $Request = Request::instance();
            if($Request->has('id')){
                $id=$Request->get('id');

                $AdminModel = new AdminModel();
                $Date =  $AdminModel->where(['admin_id'=>$id])->select();
                $power_id=$Date[0]['admin_power_id']; //当前点击的管理员权限表id

                /*判断当前管理的权限*/
                $Login_admin_id =Session::get('admin_power_id'); //当前登录的管理元的权限id
//                echo $Login_admin_id;
                $PowerDateed = Db::query("select  title from tb_auth_group,tb_auth_group_access where  group_id = id and uid='$Login_admin_id'");
//                dump($PowerDateed);
//                exit();
                //实例之后当前登录的管理等级
                $PowerDateing = Db::query("select  title from tb_auth_group,tb_auth_group_access where  group_id = id and uid='$id'");
                //当前操作的管理的管理等级
                /*实例*/
                /*需要操作的管理员权限*/
                $Powered = $this->PowerName($PowerDateed[0]['title']);  //实例之后当前登录的管理等级
                $Powering = $this->PowerName($PowerDateing[0]['title']);  //当前操作的管理的管理等级
                if($Powered===9){
                    /*当前登录的管理等级为 超级管理员*/
                    if($Powering==9){
                        if(Session::get('admin_id') == $id){
                            $this->assign([
                                'Header'=>"修改本身信息",
                                'AdminDate'=>$Date
                            ]);
                        }else return '<script> alert("无法修改同为超级管理员信息");window.location.href="../Manage/ShowList" </script>';
                    }else if($Powering==1){
                        $this->assign([
                            'Header'=>"修改管理员信息",
                            'AdminDate'=>$Date
                        ]);
                    }
                }else if($Powered <9){
                    /*当前登录的管理等级为 普通管理员*/
                    if($Powering==9){
                        return '<script> alert("没有权限修改当前管理等级的信息");window.location.href="../Manage/ShowList" </script>';
                    }else if($Powering==1){
                        $this->assign([
                            'Header'=>"修改管理员信息",
                            'AdminDate'=>$Date
                        ]);
                    }
                }
            }
            return $this->fetch('admin/update');
        }else return $this->fetch('admin/login');
    }
    /*对管理的名称的实例*/
    public function powerName($PowerNmae){
        if($PowerNmae === "超级管理员"){
            return 9;
        }else  if($PowerNmae === "普通管理员"){
            return 1;
        }
    }
    /*修改信息*/
    public  function updateAdmin(){
        if(Session::has('admin_id')) {
            $Request = Request::instance();
            if($Request->has('admin_id')) {
                $id = $Request->post('admin_id');
                $name = $Request->post('admin_name');
                $password = $Request->post('admin_password');
                $state = $Request->post('state');
                if($state=== "启用")
                    $state=1;
                else if($state=== "禁用")
                    $state=-1;
                if(($password=='' ||$password ==null)){
                    return '<script> alert("输入项不能为null!");history.go(-1); </script>';
                }else {
                    $AdminModel = new AdminModel();
                    $Date=array([
                        'admin_password'=>md5($password),
                        'admin_state' => $state,
                    ]);
                    /*数据*/;
                    $password =md5($password);
                    $retuen = $AdminModel->query("update tb_admin set admin_password='$password',admin_state ='$state' where admin_id =$id");
                    if($retuen > -1){
                        return '<script> alert("信息修改成功!");history.go(-2); </script>';
                    }
                }
            }
        }else return $this->fetch('admin/login');
    }
    /* 删除信息 */
    public function deleteAdmin(){
        $Request = Request::instance();
        if($Request->has('admin_id')) {
            $admin_id = $Request->get('admin_id');  //当前需要删除的管理员id
            $AdminModel = new AdminModel();
            $retuen = $AdminModel->where(['admin_id'=>$admin_id])->delete();
            /**/
            if($retuen > -1){
                return '<script> alert("用户信息删除成功!");history.go(-2); </script>';
            }
        }
    }
}