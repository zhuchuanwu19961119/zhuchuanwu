<?php
namespace app\Shop\controller;   //引用 控制层 命名空间
use verify;
use think\Request;
use think\Session;
use app\shop\model\admin as AdminModel;
use app\shop\model\adminInformation as InformationModel;
class Login extends Base{

    /**
     *   引用Base _initialize 验证权限
     */
    public function _initialize(){
        /*Permission_verification 父级的权限验证方法*/
        parent::Permission_verification(); // TODO: Change the autogenerated stub
    }
    /**
     *  index 显示login主页
     */
    public function index(){
        if(Session::has('admin_id')) {
            /*当前用户已经登录*/
            return $this->fetch("home/index");
        }else return $this->fetch("login/index");
    }
    /**
     *  verify 显示验证码
     */
    public function showVerify(){
        $Verify=new verify\Verify();
        $Verify->entry();
    }
    /**
     *  ajaxLogin 使用AJAX验证登录信息
     */
    public function ajaxLogin()
    {
        $Request = Request::instance();
        if ($Request->has('name') && $Request->has('password') && $Request->has('code')) {
            $name = $Request->get('name');
            $password = $Request->get('password');
            $code = $Request->get('code');
            $remember = $Request->get('remember');
            if (($name != '' || $name != null) && ($password != '' || $password != null) && ($code != '' || $code != null)) {
                /*输入项不为空*/
                $Verify = new verify\Verify();
                if ($Verify->check($code)) {
                    /*验证码正确*/
                    // 引用model
                    $AdminModel = new AdminModel();
                    //使用SQL语句判断用户是否存在
                    $AdminArray = $AdminModel->where(["admin_login_name" => $name])->select();
                    if ($AdminArray) {
                        /* 当前账号存在*/
                        if (md5($password) === $AdminArray[0]["admin_login_password"]) {
                            /*当前输入的密码密码正确*/
                            /*将此次信息存入 information 表*/
                            //获取当前用户的admin_information_id
                            $admin_information_id = $AdminArray[0]['admin_information_id'];
                            // 操作时间
                            $time = date("Y-m-d H:i:s");

                            /*获取个人信息*/
                            // 引用model
                            $InformationModel = new InformationModel();
                            //查询当前用户的全部信息
                            $InformationArray = $InformationModel->where(["admin_information_id" => $admin_information_id])->select();
                            //上次操作登录的ip
                            $ipc = $InformationArray[0]['admin_login_ipc'];
                            //生成新的ip
                            preg_match_all('/([\d]+[\W])/', $ipc, $ip);
                            $rand = rand(1, 255);
                            $new_ip = $ip[0][0] . $ip[0][1] . $ip[0][2] . $rand;
                            //实例data数据
                            $data = array(
                                "admin_login_time" => $time,
                                "admin_login_ipc" => $new_ip,
                            );
                            //修改信息
                            $return = $InformationModel->where(['admin_information_id' => $admin_information_id])->update($data);
                            if ($return > -1) {
                                /*信息修改成功*/
                                /*判断是否存在remember*/
                                //存入Session
                                Session::set('admin_id', $AdminArray[0]['admin_id']);
                                echo "登录成功";

                            }
                        } else echo "密码错误";
                    } else echo "当前账号不存在";
                } else  echo "验证码输入错误";
            } else  echo "有输入项为空";
        }
    }
    /**
     * 退登账号的方法 清除Session
     */
    public function retire(){
        if (Session::has('admin_id')) {
            Session::delete('admin_id');
        }
        return $this->fetch("login/index");
    }


    /**
     *   显示注册页
     */
    public function showSign(){
        return $this->fetch("login/sign");
    }
    /**
     *  注册
     */
    public function sign(){

    }


    /**
     * 显示密码重置页
     */
    public function showReset(){
        return $this->fetch("login/reset");
    }
}